def dfs(v, parent, cat_count, m, cats, adj, result):
    if cats[v-1] == 1:
        cat_count += 1
    else:
        cat_count = 0
    
    if cat_count > m:
        return
    
    is_leaf = True
    for u in adj[v]:
        if u != parent:
            is_leaf = False
            dfs(u, v, cat_count, m, cats, adj, result)
    
    if is_leaf:
        result[0] += 1

def main():
    n, m = map(int, input().split())
    cats = list(map(int, input().split()))
    adj = [[] for _ in range(n)]
    
    for _ in range(n-1):
        x, y = map(int, input().split())
        adj[x-1].append(y-1)
        adj[y-1].append(x-1)
    
    result = [0]
    dfs(0, -1, 0, m, cats, adj, result)
    print(result[0])

if name == "main":
    main()
